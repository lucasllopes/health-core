type Doctor {
    id: ID!
    name: String!
    specialty: String!
    crm: String!
}

type Nurse {
    id: ID!
    name: String!
    coren: String!
}

type Patient {
    id: ID!
    name: String!
    dateOfBirth: String
    document: String
    phone: String
    email: String
    address: String
}

type Appointment {
    id: ID!
    patient: Patient
    doctor: Doctor
    nurse: Nurse
    appointmentDate: String!
    status: String!
    notes: String
    createdAt: String!
    updatedAt: String
}

type MedicalRecord {
    id: ID!
    appointmentId: ID!
    doctorId: ID!
    patientId: ID!
    diagnosis: String
    prescription: String
    observations: String
    createdAt: String!
    updatedAt: String!
}

input PageInput {
    page: Int = 0
    size: Int = 3
}

type PageOutput {
    page: Int!
    size: Int!
    totalPages: Int!
    totalElements: Int!
}

type AppointmentPageGraphQL {
    content: [Appointment!]!
    pageInfo: PageOutput!
}

input AppointmentFilter {
    patientDocument: String
    doctorCrm: String
    futureOnly: Boolean
}

type Query {
    appointmentById(id: ID!): Appointment
    appointments(filter: AppointmentFilter, page: PageInput!): AppointmentPageGraphQL!
}

